version: '2.1'

services:

  elasticsearch:
    build:
      context: elasticsearch/
      args:
        ELK_VERSION: "6.5.2"
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    ports:
      - "9200:9200"
      - "9300:9300"
    environment:
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk

  logstash:
    build:
      context: logstash/
      args:
        ELK_VERSION: "6.5.2"
    container_name: logstash
    volumes:
      - ./logstash/config/logstash.yml:/usr/share/logstash/config/logstash.yml:ro
      - ./logstash/pipeline:/usr/share/logstash/pipeline:ro
    ports:
      - "5000:5000"
      - "9600:9600"
      - "12201:12201"
    environment:
      LS_JAVA_OPTS: "-Xmx256m -Xms256m"
    networks:
      - elk
    depends_on:
      - elasticsearch

  kibana:
    build:
      context: kibana/
      args:
        ELK_VERSION: "6.5.2"
    container_name: kibana
    volumes:
      - ./kibana/config/:/usr/share/kibana/config:ro
    ports:
      - "5601:5601"
    networks:
      - elk
    depends_on:
      - elasticsearch

  nginx:
   image: nginx:latest
   ports:
    - "80"
   networks:
    - elk
   depends_on:
    - logstash
   restart: on-failure
   healthcheck:
    test: ["CMD", "curl", "-f", "http://localhost:12201"]
    interval: 1m30s
    timeout: 10s
    retries: 3
   logging:
    driver: gelf
    options:
      mode: "non-blocking"
      max-buffer-size: "10m"
      gelf-address: "tcp://localhost:12201"

networks:
  elk:
    driver: bridge
